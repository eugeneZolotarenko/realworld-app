{"version":3,"sources":["serviceWorker.js","lib/utils/history.ts","components/Loader.tsx","lib/utils/constants.ts","lib/utils/general.ts","lib/api/articles.ts","redux/slices/articlesSlice.ts","components/Articles/ArticlePreview.tsx","components/Pagination/PaginationNumber.tsx","lib/utils/pagination/calculatePercentageOfPages.ts","components/Pagination/Pagination.tsx","lib/utils/pagination/calculatePagination.ts","components/Articles/ArticlesList.tsx","components/Tags.tsx","components/Tabs.tsx","pages/Home.tsx","lib/api/user.ts","redux/slices/userSlice.ts","pages/SignIn.tsx","pages/SignUp.tsx","pages/Settings.tsx","pages/Editor.tsx","lib/api/comments.ts","components/Articles/ArticleMeta.tsx","components/Comments/Comment.tsx","components/Comments/CreateComment.tsx","pages/Article.tsx","pages/Profile.tsx","components/Header.tsx","components/Footer.tsx","App.tsx","redux/rootReducer.ts","redux/store.ts","lib/utils/localStorage.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","createBrowserHistory","override","css","Loader","size","color","loading","FullHeightLoader","style","display","height","apiUrl","process","getHeaders","token","authorization","encodeURIComponent","limitOffset","page","articlesAPI","createArticle","a","title","description","body","tagList","fetch","method","headers","JSON","stringify","article","response","json","editArticle","slug","deleteArticle","getOne","status","getAll","filterByTag","tag","filterByAuthor","author","filterByUserFavorited","userName","getFeeds","getTags","loveIt","unLoveIt","articlesSlice","createSlice","name","initialState","articles","count","pages","userFavorited","isFeed","isLoading","isError","reducers","setArticlesData","state","action","payload","articlesCount","Array","from","length","Math","ceil","v","i","setArticlesPage","setArticlesTag","setArticlesAuthor","setArticlesUserFavorited","setArticlesFeed","setLoading","setError","actions","ArticlePreview","currentUser","useState","favoritesCount","setFavoritesCount","favorited","setFavorited","toggleLike","className","Link","to","username","src","image","alt","Date","createdAt","toDateString","onClick","history","push","PaginationNumber","eachPage","dispatch","useDispatch","key","calculatePercentageOfPages","percent","Pagination","useRef","useEffect","current","floor","ITEMS_IN_PAGINATION","calculatePagination","stylePagination","justifyContent","map","slice","ArticlesList","useSelector","articlesData","user","byTagArticles","pathname","includes","byAuthorArticles","getArticlesByAuthor","userFavoritedArticles","getArticlesByUserFavorited","feedArticles","getArticlesFeeds","allArticles","getAllArticles","Tags","tagsList","setTagsList","tags","Tabs","Home","userAPI","register","email","password","login","data","updateUser","bio","Authorization","getProfile","profile","followUser","unFollowUser","userSlice","setCurrentUser","logoutUser","setImage","setEmail","setUsername","setBio","loginUser","console","error","SignIn","setPassword","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","disabled","SignUp","setUserName","registerUser","Settings","handleSubmit","rows","changePathnameToWord","replace","Editor","setTitle","setDescription","setBody","setTagList","lastTag","setLastTag","setSlug","listen","getArticle","addTags","split","onKeyDown","keyCode","onBlur","join","filter","t","j","commentsAPI","getComments","comments","addComment","commentText","comment","deleteComment","id","ArticleMeta","followedAuthor","setFollowedAuthor","toggleFollowing","Comment","setComments","each","CreateComment","setCommentText","errorMessage","setErrorMessage","createComment","setTimeout","Article","setArticle","following","getAllComments","Profile","setProfile","followedUser","setFollowedUser","getUserProfile","Header","Footer","href","App","Auth","Switch","Route","exact","path","component","rootReducer","combineReducers","userReducer","articlesReducer","preloadedState","serializedState","localStorage","getItem","parse","err","loadState","store","configureStore","reducer","subscribe","setItem","saveState","getState","ReactDOM","render","StrictMode","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1276e158.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\"\r\n\r\nexport default createBrowserHistory()\r\n","import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\nimport ClipLoader from \"react-spinners/ClipLoader\"\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 30px auto;\r\n  height: 70px;\r\n  width: 70px;\r\n  align-self: center;\r\n`\r\n\r\nexport function Loader() {\r\n  return (\r\n    <ClipLoader css={override} size={150} color={\"#5cb85c\"} loading={true} />\r\n  )\r\n}\r\n\r\nexport function FullHeightLoader() {\r\n  return (\r\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n      <Loader />\r\n    </div>\r\n  )\r\n}\r\n","export const apiUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const ARTICLES_ON_ONE_PAGE = 10\r\n\r\nexport const ITEMS_IN_PAGINATION = 7\r\n\r\nexport const DEFAULT_USER_IMAGE =\r\n  \"https://static.productionready.io/images/smiley-cyrus.jpg\"\r\n","export const getHeaders = (token: string): Record<string, string> =>\r\n  token ? { authorization: `Token ${encodeURIComponent(token)}` } : {}\r\n","import { apiUrl, ARTICLES_ON_ONE_PAGE } from \"lib/utils/constants\"\r\nimport { getHeaders } from \"lib/utils/general\"\r\n\r\nconst limitOffset = (page: number) =>\r\n  `limit=${ARTICLES_ON_ONE_PAGE}&offset=${\r\n    page === 1 ? 0 : ARTICLES_ON_ONE_PAGE * (page - 1)\r\n  }`\r\n\r\ntype EditArticleTypes = {\r\n  title: string\r\n  description: string\r\n  body: string\r\n  tagList: string[]\r\n  token: string\r\n  slug: string\r\n}\r\n\r\ntype CreateArticleTypes = {\r\n  title: string\r\n  description: string\r\n  body: string\r\n  tagList: string[]\r\n  token: string\r\n}\r\n\r\nconst articlesAPI = {\r\n  createArticle: async ({\r\n    title,\r\n    description,\r\n    body,\r\n    tagList,\r\n    token,\r\n  }: CreateArticleTypes) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          article: { title, description, body, tagList },\r\n        }),\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  editArticle: async ({\r\n    title,\r\n    description,\r\n    body,\r\n    tagList,\r\n    token,\r\n    slug,\r\n  }: EditArticleTypes) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles/${slug}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          article: { title, description, body, tagList },\r\n        }),\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  deleteArticle: async (slug: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles/${slug}/`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  getOne: async (slug: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles/${slug}`, {\r\n        method: \"GET\",\r\n        headers: getHeaders(token),\r\n      })\r\n      const { article } = await response.json()\r\n      return { article, status: response.status }\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  getAll: async (page: number, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles?${limitOffset(page)}`, {\r\n        method: \"GET\",\r\n        headers: getHeaders(token),\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  filterByTag: async (page: number, tag: string, token: string) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${apiUrl}/articles?tag=${tag}&${limitOffset(page)}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: getHeaders(token),\r\n        }\r\n      )\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  filterByAuthor: async (page: number, author: string, token: string) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${apiUrl}/articles?author=${author}&${limitOffset(page)}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: getHeaders(token),\r\n        }\r\n      )\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  filterByUserFavorited: async (\r\n    page: number,\r\n    userName: string,\r\n    token: string\r\n  ) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${apiUrl}/articles?favorited=${userName}&${limitOffset(page)}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: getHeaders(token),\r\n        }\r\n      )\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  getFeeds: async (page: number, token: string) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${apiUrl}/articles/feed?${limitOffset(page)}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            authorization: `Token ${encodeURIComponent(token)}`,\r\n          },\r\n        }\r\n      )\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  getTags: async () => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/tags`, {\r\n        method: \"GET\",\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  loveIt: async (slug: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles/${slug}/favorite`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n\r\n  unLoveIt: async (slug: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles/${slug}/favorite`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n}\r\n\r\nexport default articlesAPI\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport articlesAPI from \"lib/api/articles\"\r\nimport { ARTICLES_ON_ONE_PAGE } from \"lib/utils/constants\"\r\n\r\nimport { ArticleTypes } from \"lib/types\"\r\n\r\nimport { AppThunk } from \"redux/store\"\r\n\r\ntype InitialStateTypes = {\r\n  articles: ArticleTypes[]\r\n  count: number\r\n  pages: number[]\r\n  page: number\r\n  tag: string\r\n  author: string\r\n  userFavorited: string\r\n  isFeed: boolean\r\n  isLoading: boolean\r\n  isError: boolean\r\n}\r\n\r\nconst initialState: InitialStateTypes = {\r\n  articles: [],\r\n  count: 0,\r\n  pages: [0],\r\n  page: 1,\r\n  tag: \"\",\r\n  author: \"\",\r\n  userFavorited: \"\",\r\n  isFeed: false,\r\n  isLoading: false,\r\n  isError: false,\r\n}\r\n\r\nconst articlesSlice = createSlice({\r\n  name: \"articles\",\r\n  initialState,\r\n  reducers: {\r\n    setArticlesData(state, action) {\r\n      state.isError = false\r\n      state.articles = action.payload.articles\r\n      state.count = action.payload.articlesCount\r\n      state.pages = Array.from(\r\n        {\r\n          length: Math.ceil(\r\n            action.payload.articlesCount / ARTICLES_ON_ONE_PAGE\r\n          ),\r\n        },\r\n        (v, i) => i + 1\r\n      )\r\n      state.isLoading = false\r\n    },\r\n    setArticlesPage(state, action) {\r\n      state.page = action.payload\r\n    },\r\n    setArticlesTag(state, action) {\r\n      state.isFeed = false\r\n      state.author = \"\"\r\n      state.userFavorited = \"\"\r\n      state.page = 1\r\n      state.tag = action.payload\r\n    },\r\n    setArticlesAuthor(state, action) {\r\n      state.isFeed = false\r\n      state.tag = \"\"\r\n      state.userFavorited = \"\"\r\n      state.page = 1\r\n      state.author = action.payload\r\n    },\r\n    setArticlesUserFavorited(state, action) {\r\n      state.isFeed = false\r\n      state.tag = \"\"\r\n      state.author = \"\"\r\n      state.page = 1\r\n      state.userFavorited = action.payload\r\n    },\r\n    setArticlesFeed(state, action) {\r\n      state.tag = \"\"\r\n      state.author = \"\"\r\n      state.userFavorited = \"\"\r\n      state.page = 1\r\n      state.isFeed = action.payload\r\n    },\r\n    setLoading(state, action) {\r\n      state.isLoading = action.payload\r\n    },\r\n    setError(state, action) {\r\n      state.isError = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const getAllArticles = (page: number, token: string): AppThunk => async (\r\n  dispatch\r\n) => {\r\n  dispatch(setLoading(true))\r\n  try {\r\n    const allArticles = await articlesAPI.getAll(page, token)\r\n    dispatch(setArticlesData(allArticles))\r\n  } catch {\r\n    dispatch(setError(true))\r\n  }\r\n}\r\n\r\nexport const getArticlesByTag = (\r\n  page: number,\r\n  tag: string,\r\n  token: string\r\n): AppThunk => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  try {\r\n    const byTagArticles = await articlesAPI.filterByTag(page, tag, token)\r\n    dispatch(setArticlesData(byTagArticles))\r\n  } catch {\r\n    dispatch(setError(true))\r\n  }\r\n}\r\n\r\nexport const getArticlesByAuthor = (\r\n  page: number,\r\n  author: string,\r\n  token: string\r\n): AppThunk => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  try {\r\n    const byAuthorArticles = await articlesAPI.filterByAuthor(\r\n      page,\r\n      author,\r\n      token\r\n    )\r\n    dispatch(setArticlesData(byAuthorArticles))\r\n  } catch {\r\n    dispatch(setError(true))\r\n  }\r\n}\r\n\r\nexport const getArticlesByUserFavorited = (\r\n  page: number,\r\n  userName: string,\r\n  token: string\r\n): AppThunk => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  try {\r\n    const userFavoritedArticles = await articlesAPI.filterByUserFavorited(\r\n      page,\r\n      userName,\r\n      token\r\n    )\r\n    dispatch(setArticlesData(userFavoritedArticles))\r\n  } catch {\r\n    dispatch(setError(true))\r\n  }\r\n}\r\n\r\nexport const getArticlesFeeds = (\r\n  page: number,\r\n  token: string\r\n): AppThunk => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  try {\r\n    const feedArticles = await articlesAPI.getFeeds(page, token)\r\n    dispatch(setArticlesData(feedArticles))\r\n  } catch {\r\n    dispatch(setError(true))\r\n  }\r\n}\r\n\r\nexport const {\r\n  setArticlesData,\r\n  setArticlesPage,\r\n  setArticlesTag,\r\n  setArticlesAuthor,\r\n  setArticlesUserFavorited,\r\n  setArticlesFeed,\r\n  setLoading,\r\n  setError,\r\n} = articlesSlice.actions\r\n\r\nexport default articlesSlice.reducer\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport articlesAPI from \"lib/api/articles\"\r\nimport history from \"lib/utils/history\"\r\nimport { ArticleTypes, BasicUserTypes } from \"lib/types\"\r\n\r\ntype PropsTypes = {\r\n  article: ArticleTypes\r\n  currentUser: BasicUserTypes\r\n}\r\n\r\nfunction ArticlePreview({ article, currentUser }: PropsTypes) {\r\n  const [favoritesCount, setFavoritesCount] = useState(article.favoritesCount)\r\n  const [favorited, setFavorited] = useState(article.favorited)\r\n\r\n  const toggleLike = async () => {\r\n    if (!favorited) {\r\n      setFavorited(true)\r\n      setFavoritesCount(favoritesCount + 1)\r\n      await articlesAPI.loveIt(article.slug, currentUser.token)\r\n    } else {\r\n      setFavorited(false)\r\n      setFavoritesCount(favoritesCount - 1)\r\n      await articlesAPI.unLoveIt(article.slug, currentUser.token)\r\n    }\r\n  }\r\n  return (\r\n    <div className='article-preview'>\r\n      <div className='article-meta'>\r\n        <Link to={`/profile/${article.author.username}`}>\r\n          <img src={article.author.image} alt={article.author.username} />\r\n        </Link>\r\n        <div className='info'>\r\n          <Link to={`/profile/${article.author.username}`} className='author'>\r\n            {article.author.username}\r\n          </Link>\r\n          <span className='date'>\r\n            {new Date(article.createdAt).toDateString()}\r\n          </span>\r\n        </div>\r\n        <button\r\n          className={\r\n            favorited\r\n              ? \"btn btn-outline-primary btn-sm pull-xs-right active\"\r\n              : \"btn btn-outline-primary btn-sm pull-xs-right\"\r\n          }\r\n          onClick={() => {\r\n            currentUser.token ? toggleLike() : history.push(\"/register\")\r\n          }}>\r\n          <i className='ion-heart'></i> {favoritesCount}\r\n        </button>\r\n      </div>\r\n      <Link to={`/article/${article.slug}`} className='preview-link'>\r\n        <h1>{article.title}</h1>\r\n        <p>{article.description}</p>\r\n        <span>Read more...</span>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ArticlePreview\r\n","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\ntype PropsTypes = {\r\n  eachPage: number\r\n  page: number\r\n  setArticlesPage: (eachPage: number) => void\r\n}\r\n\r\nfunction PaginationNumber({ eachPage, page, setArticlesPage }: PropsTypes) {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <li\r\n      key={eachPage}\r\n      className={eachPage === page ? \"page-item active\" : \"page-item\"}>\r\n      <button\r\n        onClick={() => dispatch(setArticlesPage(eachPage))}\r\n        className='page-link'>\r\n        {eachPage}\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PaginationNumber\r\n","import { ITEMS_IN_PAGINATION } from \"../constants\"\r\n\r\nexport function calculatePercentageOfPages(percent: number) {\r\n  return Math.ceil(ITEMS_IN_PAGINATION * (percent / 100))\r\n}\r\n","import React, { useRef, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport PaginationNumber from \"./PaginationNumber\"\r\n\r\nimport { setArticlesPage } from \"redux/slices/articlesSlice\"\r\nimport { calculatePagination } from \"lib/utils/pagination/calculatePagination\"\r\nimport { calculatePercentageOfPages } from \"lib/utils/pagination/calculatePercentageOfPages\"\r\nimport { ITEMS_IN_PAGINATION } from \"lib/utils/constants\"\r\n\r\ntype PropsTypes = {\r\n  page: number\r\n  pages: number[]\r\n  isLoading: boolean\r\n}\r\n\r\nfunction Pagination({ page, pages, isLoading }: PropsTypes) {\r\n  const from = useRef(0)\r\n  const to = useRef(ITEMS_IN_PAGINATION)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (pages) {\r\n      calculatePagination({ page, pages, to, from })\r\n    }\r\n  }, [page, pages])\r\n\r\n  const toFirstItem = () => {\r\n    dispatch(setArticlesPage(1))\r\n    if (pages.length > ITEMS_IN_PAGINATION) {\r\n      from.current = 0\r\n      to.current = ITEMS_IN_PAGINATION\r\n    }\r\n  }\r\n\r\n  const toLastItem = () => {\r\n    dispatch(setArticlesPage(pages.length))\r\n    if (pages.length > ITEMS_IN_PAGINATION) {\r\n      from.current = pages.length - ITEMS_IN_PAGINATION\r\n      to.current = pages.length\r\n    }\r\n  }\r\n\r\n  const oneItemLess = () => {\r\n    dispatch(setArticlesPage(page - 1))\r\n    if (from.current !== 0 && pages.length > ITEMS_IN_PAGINATION) {\r\n      from.current = from.current - 1\r\n      to.current = to.current - 1\r\n    }\r\n  }\r\n\r\n  const oneItemMore = () => {\r\n    dispatch(setArticlesPage(page + 1))\r\n    if (pages.length > ITEMS_IN_PAGINATION) {\r\n      from.current = from.current + 1\r\n      to.current = to.current + 1\r\n    }\r\n  }\r\n\r\n  const stylePagination = {\r\n    display: isLoading ? \"none\" : \"flex\",\r\n    justifyContent: \"center\",\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isLoading && pages.length > 1 && (\r\n        <nav style={stylePagination}>\r\n          <ul className='pagination'>\r\n            <li className='page-item'>\r\n              <button\r\n                onClick={toFirstItem}\r\n                style={{ display: from.current > 0 ? \"block\" : \"none\" }}\r\n                className='page-link'>\r\n                &lt;&lt; 1\r\n              </button>\r\n              <button\r\n                onClick={oneItemLess}\r\n                style={{ display: page !== 1 ? \"block\" : \"none\" }}\r\n                className='page-link'>\r\n                &lt;\r\n              </button>\r\n            </li>\r\n\r\n            {pages.length <= ITEMS_IN_PAGINATION &&\r\n              pages.map((eachPage) => {\r\n                return (\r\n                  <PaginationNumber\r\n                    key={eachPage}\r\n                    eachPage={eachPage}\r\n                    page={page}\r\n                    setArticlesPage={setArticlesPage}\r\n                  />\r\n                )\r\n              })}\r\n\r\n            {pages.length > ITEMS_IN_PAGINATION &&\r\n              [...pages].slice(from.current, to.current).map((eachPage) => {\r\n                return (\r\n                  <PaginationNumber\r\n                    key={eachPage}\r\n                    eachPage={eachPage}\r\n                    page={page}\r\n                    setArticlesPage={setArticlesPage}\r\n                  />\r\n                )\r\n              })}\r\n\r\n            <li className='page-item'>\r\n              <button\r\n                onClick={oneItemMore}\r\n                style={{ display: page !== pages.length ? \"block\" : \"none\" }}\r\n                className='page-link'>\r\n                &gt;\r\n              </button>\r\n            </li>\r\n            <li className='page-item'>\r\n              <button\r\n                onClick={toLastItem}\r\n                style={{\r\n                  display:\r\n                    page < pages.length - calculatePercentageOfPages(40)\r\n                      ? \"block\"\r\n                      : \"none\",\r\n                }}\r\n                className='page-link'>\r\n                {pages.length} &gt;&gt;\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import { ITEMS_IN_PAGINATION } from \"../constants\"\r\nimport { calculatePercentageOfPages } from \"lib/utils/pagination/calculatePercentageOfPages\"\r\n\r\ntype PaginationTypes = {\r\n  page: number\r\n  pages: number[]\r\n  to: { current: number }\r\n  from: { current: number }\r\n}\r\n\r\nexport function calculatePagination({\r\n  page,\r\n  pages,\r\n  to,\r\n  from,\r\n}: PaginationTypes) {\r\n  from.current = Math.floor(page - ITEMS_IN_PAGINATION / 2)\r\n  to.current = Math.floor(page + ITEMS_IN_PAGINATION / 2)\r\n  if (page >= pages.length - calculatePercentageOfPages(40)) {\r\n    from.current = pages.length - ITEMS_IN_PAGINATION\r\n    to.current = pages.length\r\n  }\r\n  if (page <= calculatePercentageOfPages(40)) {\r\n    from.current = 0\r\n    to.current = ITEMS_IN_PAGINATION\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport history from \"lib/utils/history\"\r\n\r\nimport { Loader } from \"components/Loader\"\r\n\r\nimport {\r\n  getAllArticles,\r\n  getArticlesByTag,\r\n  getArticlesByAuthor,\r\n  getArticlesByUserFavorited,\r\n  getArticlesFeeds,\r\n} from \"redux/slices/articlesSlice\"\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nimport ArticlePreview from \"./ArticlePreview\"\r\nimport Pagination from \"components/Pagination/Pagination\"\r\n\r\nfunction ArticlesList() {\r\n  const dispatch = useDispatch()\r\n  const { articlesData, user } = useSelector((state: RootState) => state)\r\n\r\n  const { location } = history\r\n\r\n  useEffect(() => {\r\n    if (articlesData.tag) {\r\n      dispatch(\r\n        getArticlesByTag(articlesData.page, articlesData.tag, user.token)\r\n      )\r\n    } else if (articlesData.author && location.pathname.includes(\"profile\")) {\r\n      dispatch(\r\n        getArticlesByAuthor(articlesData.page, articlesData.author, user.token)\r\n      )\r\n    } else if (\r\n      articlesData.userFavorited &&\r\n      location.pathname.includes(\"profile\")\r\n    ) {\r\n      dispatch(\r\n        getArticlesByUserFavorited(\r\n          articlesData.page,\r\n          articlesData.userFavorited,\r\n          user.token\r\n        )\r\n      )\r\n    } else if (articlesData.isFeed && user.token) {\r\n      dispatch(getArticlesFeeds(articlesData.page, user.token))\r\n    } else {\r\n      dispatch(getAllArticles(articlesData.page, user.token))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    articlesData.page,\r\n    articlesData.tag,\r\n    articlesData.author,\r\n    articlesData.userFavorited,\r\n    articlesData.isFeed,\r\n    user.token,\r\n    location,\r\n  ])\r\n\r\n  if (articlesData.isError) {\r\n    return <p>Error!</p>\r\n  }\r\n\r\n  if (articlesData.isLoading) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n        {/* Pagintion logic does not work without pagination there, think about it ;( */}\r\n        <Pagination\r\n          page={articlesData.page}\r\n          pages={articlesData.pages}\r\n          isLoading={articlesData.isLoading}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  if (articlesData.articles.length === 0) {\r\n    return <p>No Articles yet</p>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {articlesData.articles.map((article: any, i) => {\r\n        return <ArticlePreview article={article} currentUser={user} key={i} />\r\n      })}\r\n      <Pagination\r\n        page={articlesData.page}\r\n        pages={articlesData.pages}\r\n        isLoading={articlesData.isLoading}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ArticlesList\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport articlesAPI from \"lib/api/articles\"\r\nimport { setArticlesTag } from \"redux/slices/articlesSlice\"\r\n\r\nimport { Loader } from \"components/Loader\"\r\n\r\nfunction Tags() {\r\n  const [tagsList, setTagsList] = useState<string[]>()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    async function getTags() {\r\n      const { tags } = await articlesAPI.getTags()\r\n      setTagsList(tags)\r\n    }\r\n    getTags()\r\n  }, [])\r\n\r\n  if (!tagsList || !tagsList.length) {\r\n    return <Loader />\r\n  }\r\n  return (\r\n    <div className='tag-list'>\r\n      {tagsList.map((tag, i) => {\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              dispatch(setArticlesTag(tag))\r\n            }}\r\n            key={i}\r\n            className='tag-pill tag-default'>\r\n            {tag}\r\n          </button>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  setArticlesFeed,\r\n  setArticlesUserFavorited,\r\n  setArticlesAuthor,\r\n} from \"redux/slices/articlesSlice\"\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\ntype PropsTypes = {\r\n  location: string\r\n  userName: string\r\n}\r\n\r\nfunction Tabs({ location, userName }: PropsTypes) {\r\n  const dispatch = useDispatch()\r\n  const { articlesData, user } = useSelector((state: RootState) => state)\r\n\r\n  if (location === \"profile\" && userName) {\r\n    return (\r\n      <>\r\n        {\r\n          <div className='articles-toggle'>\r\n            <ul className='nav nav-pills outline-active'>\r\n              <li className='nav-item'>\r\n                <button\r\n                  className={\r\n                    articlesData.author ? \"nav-link active\" : \"nav-link\"\r\n                  }\r\n                  onClick={() => {\r\n                    dispatch(setArticlesAuthor(userName))\r\n                  }}>\r\n                  My Articles\r\n                </button>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <button\r\n                  className={\r\n                    articlesData.userFavorited ? \"nav-link active\" : \"nav-link\"\r\n                  }\r\n                  onClick={() => {\r\n                    dispatch(setArticlesUserFavorited(userName))\r\n                  }}>\r\n                  Favorited Articles\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {location === \"home\" && (\r\n        <div className='feed-toggle'>\r\n          <ul className='nav nav-pills outline-active'>\r\n            <li className='nav-item'>\r\n              <button\r\n                style={{ display: user.token ? \"block\" : \"none\" }}\r\n                className={articlesData.isFeed ? \"nav-link active\" : \"nav-link\"}\r\n                onClick={() => {\r\n                  dispatch(setArticlesFeed(true))\r\n                }}>\r\n                Your Feed\r\n              </button>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <button\r\n                className={\r\n                  articlesData.tag || articlesData.isFeed\r\n                    ? \"nav-link\"\r\n                    : \"nav-link active\"\r\n                }\r\n                onClick={() => {\r\n                  dispatch(setArticlesFeed(false))\r\n                }}>\r\n                Global Feed\r\n              </button>\r\n            </li>\r\n            <li\r\n              style={{ display: articlesData.tag ? \"block\" : \"none\" }}\r\n              className='nav-item'>\r\n              <button\r\n                className={articlesData.tag ? \"nav-link active\" : \"nav-link\"}>\r\n                <i className='ion-pound'></i> {articlesData.tag}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","import React from \"react\"\r\n\r\nimport ArticlesList from \"components/Articles/ArticlesList\"\r\nimport Tags from \"components/Tags\"\r\nimport Tabs from \"components/Tabs\"\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='home-page'>\r\n      <div className='banner'>\r\n        <div className='container'>\r\n          <h1 className='logo-font'>conduit</h1>\r\n          <p>A place to share your knowledge.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='container page'>\r\n        <div className='row'>\r\n          <div className='col-md-9'>\r\n            <Tabs location='home' userName='' />\r\n            <ArticlesList />\r\n          </div>\r\n\r\n          <div className='col-md-3'>\r\n            <div className='sidebar'>\r\n              <p>Popular Tags</p>\r\n              <Tags />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { getHeaders } from \"lib/utils/general\"\r\nimport { apiUrl } from \"lib/utils/constants\"\r\nimport { BasicUserTypes } from \"lib/types\"\r\n\r\ninterface UpdateUserTypes extends BasicUserTypes {\r\n  password: string\r\n}\r\n\r\nconst userAPI = {\r\n  register: async (username: string, email: string, password: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/users`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ user: { username, email, password } }),\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n  login: async (email: string, password: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/users/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ user: { email, password } }),\r\n      })\r\n      const data = await response.json()\r\n      return {\r\n        status: response.status,\r\n        user: data.user,\r\n      }\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n  updateUser: async ({\r\n    email,\r\n    username,\r\n    password,\r\n    image,\r\n    bio,\r\n    token,\r\n  }: UpdateUserTypes) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/user`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          user: { email, username, password, image, bio },\r\n        }),\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n  currentUser: async (token: string) => {\r\n    try {\r\n      const response = await fetch(`/user`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n      })\r\n      return response\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n  getProfile: async (username: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/profiles/${username}`, {\r\n        method: \"GET\",\r\n        headers: getHeaders(token),\r\n      })\r\n      const { profile } = await response.json()\r\n      return { profile, status: response.status }\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n  followUser: async (username: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/profiles/${username}/follow`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n      })\r\n      const data = await response.json()\r\n      return data\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n  unFollowUser: async (username: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/profiles/${username}/follow`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n      })\r\n      const data = await response.json()\r\n      return data\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n}\r\n\r\nexport default userAPI\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport history from \"lib/utils/history\"\r\nimport userAPI from \"lib/api/user\"\r\nimport { DEFAULT_USER_IMAGE } from \"lib/utils/constants\"\r\nimport { FullUserTypes } from \"lib/types\"\r\n\r\nimport { AppThunk } from \"redux/store\"\r\n\r\ntype RegisterTypes = {\r\n  userName: string\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst initialState: FullUserTypes = {\r\n  isLoading: false,\r\n  isError: false,\r\n  image: \"\",\r\n  email: \"\",\r\n  username: \"\",\r\n  bio: \"\",\r\n  token: \"\",\r\n}\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    setCurrentUser(state, action) {\r\n      state.image = action.payload.image\r\n      state.email = action.payload.email = \"\"\r\n        ? DEFAULT_USER_IMAGE\r\n        : action.payload.email\r\n      state.username = action.payload.username\r\n      state.bio = action.payload.bio\r\n      state.token = action.payload.token\r\n      state.isError = false\r\n    },\r\n    logoutUser(state) {\r\n      state.image = \"\"\r\n      state.email = \"\"\r\n      state.username = \"\"\r\n      state.bio = \"\"\r\n      state.token = \"\"\r\n      history.push(\"/\")\r\n    },\r\n    setImage(state, action) {\r\n      state.image = action.payload\r\n    },\r\n    setEmail(state, action) {\r\n      state.email = action.payload\r\n    },\r\n    setUsername(state, action) {\r\n      state.username = action.payload\r\n    },\r\n    setBio(state, action) {\r\n      state.bio = action.payload\r\n    },\r\n    setLoading(state, action) {\r\n      state.isLoading = action.payload\r\n    },\r\n    setError(state, action) {\r\n      state.isError = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const loginUser = (email: string, password: string): AppThunk => async (\r\n  dispatch\r\n) => {\r\n  dispatch(setLoading(true))\r\n  try {\r\n    const { user, status } = await userAPI.login(email, password)\r\n    if (status !== 200) {\r\n      dispatch(setError(true))\r\n    } else {\r\n      history.push(\"/\")\r\n      dispatch(setCurrentUser(user))\r\n    }\r\n    dispatch(setLoading(false))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport const registerUser = ({\r\n  userName,\r\n  email,\r\n  password,\r\n}: RegisterTypes): AppThunk => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  try {\r\n    const { user, status } = await userAPI.register(userName, email, password)\r\n    if (status !== 200) {\r\n      dispatch(setError(true))\r\n    } else {\r\n      history.push(\"/\")\r\n      dispatch(setCurrentUser(user))\r\n    }\r\n    dispatch(setLoading(false))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport const {\r\n  setCurrentUser,\r\n  setImage,\r\n  setEmail,\r\n  setUsername,\r\n  setBio,\r\n  logoutUser,\r\n  setLoading,\r\n  setError,\r\n} = userSlice.actions\r\n\r\nexport default userSlice.reducer\r\n","import React, { useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport { loginUser, setError } from \"redux/slices/userSlice\"\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nfunction SignIn() {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n  const { user } = useSelector((state: RootState) => state)\r\n\r\n  return (\r\n    <div className='auth-page'>\r\n      <div className='container page'>\r\n        <div className='row'>\r\n          <div className='col-md-6 offset-md-3 col-xs-12'>\r\n            <h1 className='text-xs-center'>Sign in</h1>\r\n\r\n            {user.isError && (\r\n              <p className='error-messages'>Email or password are invalid</p>\r\n            )}\r\n\r\n            <form\r\n              onSubmit={async (e) => {\r\n                e.preventDefault()\r\n                dispatch(loginUser(email, password))\r\n              }}>\r\n              <fieldset className='form-group'>\r\n                <input\r\n                  className='form-control form-control-lg'\r\n                  type='text'\r\n                  placeholder='Email'\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value)\r\n                    dispatch(setError(false))\r\n                  }}\r\n                />\r\n              </fieldset>\r\n              <fieldset className='form-group'>\r\n                <input\r\n                  className='form-control form-control-lg'\r\n                  type='password'\r\n                  placeholder='Password'\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value)\r\n                    dispatch(setError(false))\r\n                  }}\r\n                />\r\n              </fieldset>\r\n              <button\r\n                type='submit'\r\n                className='btn btn-lg btn-primary pull-xs-right'\r\n                disabled={user.isLoading ? true : false}>\r\n                Sign in\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { registerUser, setError } from \"redux/slices/userSlice\"\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nfunction SignUp() {\r\n  const [userName, setUserName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n  const { user } = useSelector((state: RootState) => state)\r\n\r\n  return (\r\n    <div className='auth-page'>\r\n      <div className='container page'>\r\n        <div className='row'>\r\n          <div className='col-md-6 offset-md-3 col-xs-12'>\r\n            <h1 className='text-xs-center'>Sign up</h1>\r\n            <p className='text-xs-center'>\r\n              <Link to='/login'>Have an account?</Link>\r\n            </p>\r\n\r\n            {!userName && !email && !password && (\r\n              <p className='error-messages'>\r\n                Email, Password and User Name are required\r\n              </p>\r\n            )}\r\n            {user.isError && (\r\n              <p className='error-messages'>Email or password are invalid</p>\r\n            )}\r\n\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault()\r\n                dispatch(registerUser({ userName, email, password }))\r\n              }}>\r\n              <fieldset className='form-group'>\r\n                <input\r\n                  className='form-control form-control-lg'\r\n                  type='text'\r\n                  placeholder='Your Name'\r\n                  value={userName}\r\n                  onChange={(e) => {\r\n                    setUserName(e.target.value)\r\n                    dispatch(setError(false))\r\n                  }}\r\n                />\r\n              </fieldset>\r\n              <fieldset className='form-group'>\r\n                <input\r\n                  className='form-control form-control-lg'\r\n                  type='text'\r\n                  placeholder='Email'\r\n                  value={email}\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value)\r\n                    dispatch(setError(false))\r\n                  }}\r\n                />\r\n              </fieldset>\r\n              <fieldset className='form-group'>\r\n                <input\r\n                  className='form-control form-control-lg'\r\n                  type='password'\r\n                  placeholder='Password'\r\n                  value={password}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value)\r\n                    dispatch(setError(false))\r\n                  }}\r\n                />\r\n              </fieldset>\r\n              <button\r\n                type='submit'\r\n                className='btn btn-lg btn-primary pull-xs-right'\r\n                disabled={user.isLoading ? true : false}>\r\n                Sign up\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  logoutUser,\r\n  setImage,\r\n  setEmail,\r\n  setUsername,\r\n  setBio,\r\n} from \"redux/slices/userSlice\"\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nimport userAPI from \"lib/api/user\"\r\n\r\nfunction Settings() {\r\n  const dispatch = useDispatch()\r\n  const { user } = useSelector((state: RootState) => state)\r\n\r\n  const { email, username, image, bio, token } = user\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    await userAPI.updateUser({\r\n      email,\r\n      username,\r\n      password,\r\n      image,\r\n      bio,\r\n      token,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='settings-page'>\r\n      <div className='container page'>\r\n        <div className='row'>\r\n          <div className='col-md-6 offset-md-3 col-xs-12'>\r\n            <h1 className='text-xs-center'>Your Settings</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              <fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    className='form-control'\r\n                    type='text'\r\n                    value={image}\r\n                    onChange={(e) => dispatch(setImage(e.target.value))}\r\n                    placeholder='URL of profile picture'\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    className='form-control form-control-lg'\r\n                    type='text'\r\n                    value={username}\r\n                    onChange={(e) => dispatch(setUsername(e.target.value))}\r\n                    placeholder='Your Name'\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <textarea\r\n                    className='form-control form-control-lg'\r\n                    rows={8}\r\n                    value={bio}\r\n                    onChange={(e) => dispatch(setBio(e.target.value))}\r\n                    placeholder='Short bio about you'></textarea>\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    className='form-control form-control-lg'\r\n                    type='text'\r\n                    value={email}\r\n                    onChange={(e) => dispatch(setEmail(e.target.value))}\r\n                    placeholder='Email'\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    className='form-control form-control-lg'\r\n                    type='password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder='Password'\r\n                  />\r\n                </fieldset>\r\n                <button\r\n                  className='btn btn-lg btn-primary pull-xs-right'\r\n                  type='submit'>\r\n                  Update Settings\r\n                </button>\r\n              </fieldset>\r\n            </form>\r\n            <hr />\r\n            <button\r\n              className='btn btn-outline-danger'\r\n              onClick={() => dispatch(logoutUser())}>\r\n              Or click here to logout.\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport articlesAPI from \"lib/api/articles\"\r\nimport history from \"lib/utils/history\"\r\n\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nconst changePathnameToWord = (pathname: string) =>\r\n  pathname.replace(\"editor\", \"\").replace(/\\//g, \"\")\r\n\r\nfunction Editor() {\r\n  const [title, setTitle] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [body, setBody] = useState(\"\")\r\n  const [tagList, setTagList] = useState<string[]>([])\r\n\r\n  const [lastTag, setLastTag] = useState<string>(\"\")\r\n  const [slug, setSlug] = useState(\r\n    changePathnameToWord(history.location.pathname)\r\n  )\r\n\r\n  const [isError, setError] = useState(false)\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  const { user } = useSelector((state: RootState) => state)\r\n\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      if (changePathnameToWord(location.pathname)) {\r\n        setSlug(changePathnameToWord(location.pathname))\r\n      } else {\r\n        setBody(\"\")\r\n        setTagList([])\r\n        setDescription(\"\")\r\n        setTitle(\"\")\r\n        setSlug(\"\")\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (slug) {\r\n      async function getArticle() {\r\n        const { article, status } = await articlesAPI.getOne(slug, user.token)\r\n        if (status === 200) {\r\n          setBody(article.body)\r\n          setTagList(article.tagList)\r\n          setDescription(article.description)\r\n          setTitle(article.title)\r\n        } else {\r\n          history.push(\"/\")\r\n        }\r\n      }\r\n      getArticle()\r\n    }\r\n  }, [user.token, slug])\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true)\r\n    if (title && description && body) {\r\n      if (!slug) {\r\n        const { article } = await articlesAPI.createArticle({\r\n          title,\r\n          description,\r\n          body,\r\n          tagList,\r\n          token: user.token,\r\n        })\r\n        history.push(`/article/${article.slug}`)\r\n      } else {\r\n        const { article } = await articlesAPI.editArticle({\r\n          title,\r\n          description,\r\n          body,\r\n          tagList,\r\n          token: user.token,\r\n          slug,\r\n        })\r\n        history.push(`/article/${article.slug}`)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const addTags = (\r\n    e:\r\n      | React.KeyboardEvent<HTMLInputElement>\r\n      | React.FocusEvent<HTMLInputElement>\r\n  ) => {\r\n    if (lastTag) {\r\n      setTagList([\r\n        ...tagList,\r\n        ...(e.target as HTMLInputElement).value.split(\",\"),\r\n      ])\r\n      setLastTag(\"\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='editor-page'>\r\n      <div className='container page'>\r\n        <div className='row'>\r\n          <div className='col-md-10 offset-md-1 col-xs-12'>\r\n            <form\r\n              onSubmit={async (e) => {\r\n                e.preventDefault()\r\n                handleSubmit()\r\n              }}>\r\n              <fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control form-control-lg'\r\n                    placeholder='Article Title'\r\n                    value={title}\r\n                    onChange={(e) => {\r\n                      setTitle(e.target.value)\r\n                      setError(false)\r\n                    }}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    placeholder=\"What's this article about?\"\r\n                    value={description}\r\n                    onChange={(e) => {\r\n                      setDescription(e.target.value)\r\n                      setError(false)\r\n                    }}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <textarea\r\n                    className='form-control'\r\n                    rows={8}\r\n                    placeholder='Write your article (in markdown)'\r\n                    value={body}\r\n                    onChange={(e) => {\r\n                      setBody(e.target.value)\r\n                      setError(false)\r\n                    }}></textarea>\r\n                </fieldset>\r\n                <fieldset className='form-group'>\r\n                  <input\r\n                    type='text'\r\n                    className='form-control'\r\n                    placeholder='Enter tags'\r\n                    value={lastTag}\r\n                    onKeyDown={(e) => {\r\n                      if (e.keyCode === 13 || e.keyCode === 188) {\r\n                        e.preventDefault()\r\n                        addTags(e)\r\n                      }\r\n                    }}\r\n                    onBlur={(e) => addTags(e)}\r\n                    onChange={(e) =>\r\n                      setLastTag(\r\n                        (e.target as HTMLInputElement).value.split(\",\").join()\r\n                      )\r\n                    }\r\n                  />\r\n                  <div className='tag-list'>\r\n                    {tagList.map((tag, i) => {\r\n                      return (\r\n                        <span key={i} className='tag-default tag-pill'>\r\n                          <i\r\n                            className='ion-close-round'\r\n                            onClick={() => {\r\n                              setTagList([...tagList].filter((t, j) => j !== i))\r\n                            }}></i>\r\n                          {tag}\r\n                        </span>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </fieldset>\r\n                <button\r\n                  className='btn btn-lg pull-xs-right btn-primary'\r\n                  type='submit'\r\n                  disabled={isLoading ? true : false}>\r\n                  {slug ? \"Update Article\" : \"Publish Article\"}\r\n                </button>\r\n              </fieldset>\r\n            </form>\r\n            {isError && (\r\n              <p className='error-messages'>\r\n                Title, Description and Body of article cannot be empty\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editor\r\n","import { getHeaders } from \"lib/utils/general\"\r\nimport { apiUrl } from \"lib/utils/constants\"\r\n\r\ntype addCommentTypes = {\r\n  commentText: string\r\n  slug: string\r\n  token: string\r\n}\r\n\r\ntype DeleteCommentTypes = {\r\n  id: number\r\n  slug: string\r\n  token: string\r\n}\r\n\r\nconst commentsAPI = {\r\n  getComments: async (slug: string, token: string) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles/${slug}/comments`, {\r\n        method: \"GET\",\r\n        headers: getHeaders(token),\r\n      })\r\n      const { comments } = await response.json()\r\n      return comments\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n  addComment: async ({ commentText, slug, token }: addCommentTypes) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/articles/${slug}/comments`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Token ${encodeURIComponent(token)}`,\r\n        },\r\n        body: JSON.stringify({ comment: { body: commentText } }),\r\n      })\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n  deleteComment: async ({ id, slug, token }: DeleteCommentTypes) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${apiUrl}/articles/${slug}/comments/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `Token ${encodeURIComponent(token)}`,\r\n          },\r\n        }\r\n      )\r\n      return await response.json()\r\n    } catch (e) {\r\n      return e\r\n    }\r\n  },\r\n}\r\n\r\nexport default commentsAPI\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport articlesAPI from \"lib/api/articles\"\r\nimport userAPI from \"lib/api/user\"\r\nimport history from \"lib/utils/history\"\r\nimport { ArticleTypes, BasicUserTypes } from \"lib/types\"\r\n\r\ntype PropsTypes = {\r\n  article: ArticleTypes\r\n  favorited: boolean\r\n  setFavorited: (favorited: boolean) => void\r\n  favoritesCount: number\r\n  setFavoritesCount: (favoritesCount: number) => void\r\n  followedAuthor: boolean\r\n  setFollowedAuthor: (followedAuthor: boolean) => void\r\n  user: BasicUserTypes\r\n}\r\n\r\nfunction ArticleMeta({\r\n  article,\r\n  favorited,\r\n  setFavorited,\r\n  favoritesCount,\r\n  setFavoritesCount,\r\n  followedAuthor,\r\n  setFollowedAuthor,\r\n  user,\r\n}: PropsTypes) {\r\n  const toggleLike = async () => {\r\n    setFavorited(!favorited)\r\n    if (!favorited) {\r\n      setFavoritesCount(favoritesCount + 1)\r\n      await articlesAPI.loveIt(article.slug, user.token)\r\n    } else {\r\n      setFavoritesCount(favoritesCount - 1)\r\n      await articlesAPI.unLoveIt(article.slug, user.token)\r\n    }\r\n  }\r\n\r\n  const toggleFollowing = async () => {\r\n    if (user.token) {\r\n      setFollowedAuthor(!followedAuthor)\r\n      followedAuthor\r\n        ? await userAPI.unFollowUser(article.author.username, user.token)\r\n        : await userAPI.followUser(article.author.username, user.token)\r\n    } else {\r\n      history.push(\"/register\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='article-meta'>\r\n      <Link to={`/profile/${article.author.username}`}>\r\n        <img src={article.author.image} alt={article.author.username} />\r\n      </Link>\r\n      <div className='info'>\r\n        <Link to={`/profile/${article.author.username}`} className='author'>\r\n          {article.author.username}\r\n        </Link>\r\n        <span className='date'>\r\n          {new Date(article.createdAt).toDateString()}\r\n        </span>\r\n      </div>\r\n      {user.username !== article.author.username && (\r\n        <>\r\n          <button\r\n            className={\r\n              followedAuthor\r\n                ? \"btn btn-sm btn-outline-secondary action-btn active\"\r\n                : \"btn btn-sm btn-outline-secondary action-btn\"\r\n            }\r\n            onClick={toggleFollowing}>\r\n            <i\r\n              className={\r\n                followedAuthor ? \"ion-minus-round\" : \"ion-plus-round\"\r\n              }></i>\r\n            &nbsp; {followedAuthor ? \"Unfollow\" : \"Follow\"}{\" \"}\r\n            {article.author.username}\r\n          </button>\r\n          &nbsp;&nbsp;\r\n          <button\r\n            className={\r\n              favorited\r\n                ? \"btn btn-sm btn-outline-primary active\"\r\n                : \"btn btn-sm btn-outline-primary\"\r\n            }\r\n            onClick={() => {\r\n              user.token ? toggleLike() : history.push(\"/register\")\r\n            }}>\r\n            <i className='ion-heart'></i>\r\n            &nbsp; {favorited ? \"Unfavorite\" : \"Favorite\"} Post{\" \"}\r\n            <span className='counter'>({favoritesCount})</span>\r\n          </button>\r\n        </>\r\n      )}\r\n      {user.token && user.username === article.author.username && (\r\n        <>\r\n          <Link\r\n            className='btn btn-outline-secondary btn-sm'\r\n            to={`/editor/${article.slug}`}>\r\n            <i className='ion-edit'></i> Edit Article\r\n          </Link>\r\n          &nbsp;&nbsp;\r\n          <button\r\n            className='btn btn-outline-danger btn-sm'\r\n            onClick={async () => {\r\n              articlesAPI.deleteArticle(article.slug, user.token)\r\n              history.push(\"/\")\r\n            }}>\r\n            <i className='ion-trash-a'></i> Delete Article\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ArticleMeta\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport commentsAPI from \"lib/api/comments\"\r\nimport { CommentTypes, BasicUserTypes } from \"lib/types\"\r\n\r\ntype PropsTypes = {\r\n  user: BasicUserTypes\r\n  comment: CommentTypes\r\n  comments: CommentTypes[]\r\n  setComments: (comments: CommentTypes[]) => void\r\n  slug: string\r\n}\r\n\r\nfunction Comment({ comment, comments, setComments, slug, user }: PropsTypes) {\r\n  return (\r\n    <div key={comment.id} className='card'>\r\n      <div className='card-block'>\r\n        <p className='card-text'>{comment.body}</p>\r\n      </div>\r\n      <div className='card-footer'>\r\n        <Link\r\n          to={`/profile/${comment.author.username}`}\r\n          className='comment-author'>\r\n          <img\r\n            src={comment.author.image}\r\n            className='comment-author-img'\r\n            alt={comment.author.username}\r\n          />\r\n        </Link>\r\n        &nbsp;\r\n        <Link\r\n          to={`/profile/${comment.author.username}`}\r\n          className='comment-author'>\r\n          {comment.author.username}\r\n        </Link>\r\n        <span className='date-posted'>\r\n          {new Date(comment.createdAt).toDateString()}\r\n        </span>\r\n        {user.token && user.username === comment.author.username && (\r\n          <span className='mod-options'>\r\n            <i\r\n              className='ion-trash-a'\r\n              onClick={async () => {\r\n                await commentsAPI.deleteComment({\r\n                  id: comment.id,\r\n                  slug,\r\n                  token: user.token,\r\n                })\r\n                setComments(comments.filter((each) => each.id !== comment.id))\r\n              }}></i>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import React, { useState } from \"react\"\r\n\r\nimport commentsAPI from \"lib/api/comments\"\r\nimport { CommentTypes, BasicUserTypes } from \"lib/types\"\r\n\r\ntype PropsTypes = {\r\n  user: BasicUserTypes\r\n  comments: CommentTypes[]\r\n  setComments: (comments: CommentTypes[]) => void\r\n  slug: string\r\n}\r\n\r\nfunction CreateComment({ user, comments, setComments, slug }: PropsTypes) {\r\n  const [commentText, setCommentText] = useState(\"\")\r\n  const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n  const createComment = async (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    if (commentText) {\r\n      const { comment } = await commentsAPI.addComment({\r\n        commentText,\r\n        slug,\r\n        token: user.token,\r\n      })\r\n      setComments([comment, ...comments])\r\n      setCommentText(\"\")\r\n    } else {\r\n      setErrorMessage(\"Comment cannot be empty\")\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\")\r\n      }, 2500)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className='card comment-form'>\r\n        <div className='card-block'>\r\n          <textarea\r\n            className='form-control'\r\n            placeholder='Write a comment...'\r\n            rows={3}\r\n            value={commentText}\r\n            onChange={(e) => setCommentText(e.target.value)}></textarea>\r\n        </div>\r\n        <div className='card-footer'>\r\n          <img\r\n            src={user.image}\r\n            className='comment-author-img'\r\n            alt={user.username}\r\n          />\r\n          <button className='btn btn-sm btn-primary' onClick={createComment}>\r\n            Post Comment\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <p className='error-messages'>{errorMessage}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateComment\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport articlesAPI from \"lib/api/articles\"\r\nimport commentsAPI from \"lib/api/comments\"\r\nimport history from \"lib/utils/history\"\r\nimport { ArticleTypes, CommentTypes } from \"lib/types\"\r\n\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nimport ArticleMeta from \"components/Articles/ArticleMeta\"\r\nimport Comment from \"components/Comments/Comment\"\r\nimport CreateComment from \"components/Comments/CreateComment\"\r\nimport { FullHeightLoader } from \"components/Loader\"\r\n\r\nfunction Article() {\r\n  const [slug] = useState(\r\n    history.location.pathname.replace(\"article\", \"\").replace(/\\//g, \"\")\r\n  )\r\n  const [article, setArticle] = useState<ArticleTypes>()\r\n  const [favoritesCount, setFavoritesCount] = useState(0)\r\n  const [favorited, setFavorited] = useState(false)\r\n  const [followedAuthor, setFollowedAuthor] = useState(false)\r\n  const [comments, setComments] = useState<CommentTypes[]>()\r\n\r\n  const { user } = useSelector((state: RootState) => state)\r\n\r\n  useEffect(() => {\r\n    async function getArticle() {\r\n      const { article, status } = await articlesAPI.getOne(slug, user.token)\r\n      if (status === 200) {\r\n        setArticle(article)\r\n        setFavoritesCount(article.favoritesCount)\r\n        setFavorited(article.favorited)\r\n        setFollowedAuthor(article.author.following)\r\n      } else {\r\n        history.push(\"/\")\r\n      }\r\n    }\r\n    getArticle()\r\n\r\n    async function getAllComments() {\r\n      setComments(await commentsAPI.getComments(slug, user.token))\r\n    }\r\n    getAllComments()\r\n  }, [user.token, slug])\r\n\r\n  if (!article || !comments) {\r\n    return <FullHeightLoader />\r\n  }\r\n\r\n  return (\r\n    <div className='article-page'>\r\n      <div className='banner'>\r\n        <div className='container'>\r\n          <h1>{article.title}</h1>\r\n          <ArticleMeta\r\n            article={article}\r\n            favorited={favorited}\r\n            setFavorited={setFavorited}\r\n            favoritesCount={favoritesCount}\r\n            setFavoritesCount={setFavoritesCount}\r\n            followedAuthor={followedAuthor}\r\n            setFollowedAuthor={setFollowedAuthor}\r\n            user={user}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='container page'>\r\n        <div className='row article-content'>\r\n          <div className='col-md-12'>\r\n            <p>{article.body}</p>\r\n            <ul className='tag-list'>\r\n              {article.tagList.map((tag) => {\r\n                return (\r\n                  <li className='tag-default tag-pill tag-outline ng-binding ng-scope'>\r\n                    {tag}\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='article-actions'>\r\n          <ArticleMeta\r\n            article={article}\r\n            favorited={favorited}\r\n            setFavorited={setFavorited}\r\n            favoritesCount={favoritesCount}\r\n            setFavoritesCount={setFavoritesCount}\r\n            followedAuthor={followedAuthor}\r\n            setFollowedAuthor={setFollowedAuthor}\r\n            user={user}\r\n          />\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-8 offset-md-2'>\r\n            {user.token && (\r\n              <CreateComment\r\n                slug={slug}\r\n                comments={comments}\r\n                setComments={setComments}\r\n                user={user}\r\n              />\r\n            )}\r\n            {comments.map((comment: any) => {\r\n              return (\r\n                <Comment\r\n                  comment={comment}\r\n                  comments={comments}\r\n                  setComments={setComments}\r\n                  slug={slug}\r\n                  user={user}\r\n                />\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Article\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport userAPI from \"lib/api/user\"\r\nimport history from \"lib/utils/history\"\r\n\r\nimport { setArticlesAuthor } from \"redux/slices/articlesSlice\"\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nimport ArticlesList from \"components/Articles/ArticlesList\"\r\nimport Tabs from \"components/Tabs\"\r\nimport { FullHeightLoader } from \"components/Loader\"\r\n\r\nconst changePathnameToWord = (pathname: string) =>\r\n  pathname.replace(\"profile\", \"\").replace(/\\//g, \"\")\r\n\r\ninterface Profile {\r\n  [x: string]: string\r\n}\r\n\r\nfunction Profile() {\r\n  const { user } = useSelector((state: RootState) => state)\r\n\r\n  const [profile, setProfile] = useState<Profile>()\r\n  const [followedUser, setFollowedUser] = useState<boolean>()\r\n  const [username, setUsername] = useState(\r\n    changePathnameToWord(history.location.pathname)\r\n  )\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      setUsername(changePathnameToWord(location.pathname))\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(setArticlesAuthor(username))\r\n    async function getUserProfile() {\r\n      const { profile, status } = await userAPI.getProfile(username, user.token)\r\n      if (status === 200) {\r\n        setProfile(profile)\r\n        setFollowedUser(profile.following)\r\n      } else {\r\n        history.push(\"/\")\r\n      }\r\n    }\r\n    getUserProfile()\r\n  }, [user.token, username, dispatch])\r\n\r\n  if (!profile) {\r\n    return <FullHeightLoader />\r\n  }\r\n\r\n  return (\r\n    <div className='profile-page'>\r\n      <div className='user-info'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-xs-12 col-md-10 offset-md-1'>\r\n              <img\r\n                src={profile.image}\r\n                className='user-img'\r\n                alt={profile.username}\r\n              />\r\n              <h4>{profile.username}</h4>\r\n              <p>{profile.bio}</p>\r\n              {user.token && user.username === profile.username && (\r\n                <Link\r\n                  className='btn btn-sm btn-outline-secondary action-btn'\r\n                  to='/settings'>\r\n                  <i className='ion-gear-a'></i> Edit Profile Settings\r\n                </Link>\r\n              )}\r\n              {user.token && user.username !== profile.username && (\r\n                <button\r\n                  className={\r\n                    followedUser\r\n                      ? \"btn btn-sm btn-outline-secondary action-btn active\"\r\n                      : \"btn btn-sm btn-outline-secondary action-btn\"\r\n                  }\r\n                  onClick={async () => {\r\n                    setFollowedUser(!followedUser)\r\n                    followedUser\r\n                      ? await userAPI.unFollowUser(profile.username, user.token)\r\n                      : await userAPI.followUser(profile.username, user.token)\r\n                  }}>\r\n                  <i\r\n                    className={\r\n                      followedUser ? \"ion-minus-round\" : \"ion-plus-round\"\r\n                    }></i>\r\n                  &nbsp; {followedUser ? \"Unfollow\" : \"Follow\"}{\" \"}\r\n                  {profile.username}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-xs-12 col-md-10 offset-md-1'>\r\n            <Tabs location='profile' userName={profile.username} />\r\n            <ArticlesList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { setArticlesAuthor } from \"redux/slices/articlesSlice\"\r\n\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch()\r\n  const { user } = useSelector((state: RootState) => state)\r\n\r\n  return (\r\n    <nav className='navbar navbar-light'>\r\n      <div className='container'>\r\n        <Link className='navbar-brand' to='/'>\r\n          conduit\r\n        </Link>\r\n        <ul className='nav navbar-nav pull-xs-right'>\r\n          <li className='nav-item'>\r\n            <Link className='nav-link active' to='/'>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          {user.token && (\r\n            <>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/editor'>\r\n                  <i className='ion-compose'></i>&nbsp;New Article\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/settings'>\r\n                  <i className='ion-gear-a'></i>&nbsp;Settings\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link\r\n                  className='nav-link'\r\n                  to={`/profile/${user.username}`}\r\n                  onClick={() => {\r\n                    dispatch(setArticlesAuthor(user.username))\r\n                  }}>\r\n                  {user.username}\r\n                </Link>\r\n              </li>\r\n            </>\r\n          )}\r\n          {!user.token && (\r\n            <>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/login'>\r\n                  Sign in\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link className='nav-link' to='/register'>\r\n                  Sign up\r\n                </Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div className='container'>\r\n        <a href='/' className='logo-font'>\r\n          conduit\r\n        </a>\r\n        <span className='attribution'>\r\n          An interactive learning project from{\" \"}\r\n          <a href='https://thinkster.io'>Thinkster</a>. Code &amp; design\r\n          licensed under MIT.\r\n        </span>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect } from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Home from \"pages/Home\"\r\nimport SignIn from \"pages/SignIn\"\r\nimport SignUp from \"pages/SignUp\"\r\nimport Settings from \"pages/Settings\"\r\nimport Editor from \"pages/Editor\"\r\nimport Article from \"pages/Article\"\r\nimport Profile from \"pages/Profile\"\r\n\r\nimport Header from \"components/Header\"\r\nimport Footer from \"components/Footer\"\r\n\r\nimport userAPI from \"lib/api/user\"\r\n\r\nimport { RootState } from \"redux/rootReducer\"\r\n\r\nfunction App() {\r\n  const { user } = useSelector((state: RootState) => state)\r\n\r\n  useEffect(() => {\r\n    if (user.token) {\r\n      async function Auth() {\r\n        try {\r\n          await userAPI.currentUser(user.token)\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n      }\r\n      Auth()\r\n    }\r\n  }, [user])\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/login' component={SignIn} />\r\n        <Route path='/register' component={SignUp} />\r\n        <Route path='/settings' component={Settings} />\r\n        <Route path='/editor' component={Editor} />\r\n        <Route path='/article' component={Article} />\r\n        <Route path='/profile' component={Profile} />\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers } from \"redux\"\r\n\r\nimport userReducer from \"./slices/userSlice\"\r\nimport articlesReducer from \"./slices/articlesSlice\"\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  articlesData: articlesReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport default rootReducer\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\"\r\n\r\nimport rootReducer from \"./rootReducer\"\r\nimport { loadState } from \"lib/utils/localStorage\"\r\n\r\nconst preloadedState = loadState(\"state\")\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  preloadedState,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>\r\n\r\nexport default store\r\n","import { FullUserTypes } from \"lib/types\"\r\n\r\nexport const loadState = (name: string) => {\r\n  try {\r\n    const serializedState = localStorage.getItem(name)\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (err) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state: { user: FullUserTypes }, name: string) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem(name, serializedState)\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport { Provider } from \"react-redux\"\r\nimport * as serviceWorker from \"serviceWorker\"\r\nimport { Router } from \"react-router-dom\"\r\n\r\nimport App from \"App\"\r\nimport history from \"lib/utils/history\"\r\nimport store from \"redux/store\"\r\nimport { saveState } from \"lib/utils/localStorage\"\r\n\r\nstore.subscribe(() =>\r\n  saveState(\r\n    {\r\n      user: store.getState().user,\r\n    },\r\n    \"state\"\r\n  )\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}